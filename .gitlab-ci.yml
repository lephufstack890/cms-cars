stages:
  - build
  - deploy

build-staging:
  stage: build
  image: docker:19
  services:
    - docker:dind
  before_script:
    - apk update
    - apk add zip
  script:
    - docker build -t cabx-website-register . --build-arg MODE=staging
    - docker save -o cabx-website-register-${CI_PIPELINE_ID}.tar cabx-website-register
    - zip cabx-website-register-${CI_PIPELINE_ID}.zip cabx-website-register-${CI_PIPELINE_ID}.tar
  artifacts:
    paths:
      - cabx-website-register-${CI_PIPELINE_ID}.zip
  only:
    - staging

deploy-staging:
  stage: deploy
  before_script:
    - 'which ssh-agent || ( apk add openssh-client )'
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
    - chmod 700 ~/.ssh
  script:
    - scp -P $SSH_PORT cabx-website-register-${CI_PIPELINE_ID}.zip $SSH_USER@$SSH_HOST:/home/cms
    - >-
      ssh -p $SSH_PORT $SSH_USER@$SSH_HOST
      "cd /home/cms
      && unzip cabx-website-register-${CI_PIPELINE_ID}.zip
      && cat cabx-website-register-${CI_PIPELINE_ID}.tar | docker load
      && docker-compose up -d
      && docker image prune -f
      && rm cabx-website-register-${CI_PIPELINE_ID}.*
      && exit"
  only:
    - staging
